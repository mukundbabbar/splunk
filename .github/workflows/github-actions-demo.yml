# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  create:
    tags:
      - "v*"
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: |
        cd java-app-services
        mvn clean package -DskipTests
    - name: Configure Git identity
      run: |
        git config user.name "mukundbabbar"
        git config user.email "mukundbabbar@gmail.com"
    
    - name: Tag the repository
      id: tag
      run: |
        TAG=v1.$(date +'%d%m%y-%H%M')
        echo "$TAG"
        echo "tag=$TAG" >> $GITHUB_OUTPUT
        git tag -a $TAG -m "Published version $TAG" ${GITHUB_SHA}
        git push origin $TAG

    - name: Upload JAR to GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: java-app-services/target/*.jar
        tag_name: ${{ steps.tag.outputs.tag }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        TAG=v1.$(date +'%d%m%y-%H%M')
        IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/java-app-services
        docker build -t $IMAGE_NAME:$TAG -f java-app-services/Dockerfile java-app-services
        docker push $IMAGE_NAME:$TAG
